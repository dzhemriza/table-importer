#summary table-importer Sprint Log 01
= Sprint Log =
 * Sprint Goal:
  * Have a initial design of importer

== 2010-07-08 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 8: Add using of some kind of logger which logs exceptions and warnings
  * Done:
   * Continue working on initial design
    * Work on Issue 8: Add using of some kind of logger which logs exceptions and warnings
     * Finish the research about using a logger for java (the decision is log4j)
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 8: Add using of some kind of logger which logs exceptions and warnings

== 2010-07-08 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish implementation of Constant data map
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 8: Add using of some kind of logger which logs exceptions and warnings

== 2010-07-02 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Start implementation of Constant data map
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Continue implementation of constant data map

== 2010-07-01 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish implementation of Math operations field maps (Minus, Mult, Div)
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start next field map

== 2010-06-25 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish implementation of MathPlusMap and unit tests
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start next field map

== 2010-06-24 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish implementation of MathPlusMap need to write unit tests
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing unit tests for MathPlusMap class

== 2010-06-22 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish StringCatMap
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing next mapping class

== 2010-06-16 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish AutoNumberMap
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing next mapping class

== 2010-06-15 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Refactor StringToDateMap to StringToDateTimeMap and add functionality to parse not only dates but also date time and time values according to some pattern
     * Added new exception ExpectDateTimeType 
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing next mapping class

== 2010-06-11 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Work on Issue 6: Create field mappings
     * Finish StringToFloat
     * Finish StringToDouble
     * Finish StringToDate
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing next mapping class

== 2010-06-10 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Finish Issue 10:	Create base class for all String To Something field mappings
    * Work on Issue 6: Create field mappings
     * Finish ToStringMap
     * Finish StringToIntMap
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 6: Create field mappings
     * Start implementing next mapping class

== 2010-06-02 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Issue 6: Create field mappings
  * Done:
   * Continue working on initial design
    * Create and Code Issue 7: Refactor Field Mappings write method to throw a exception
    * Start working on Issue 6: Create field mappings
     * Begin with ToStringMap
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Start Issue 6: Create field mappings

== 2010-05-14 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 5: Create unit tests for DBDestTable class
  * Done:
   * Continue working on initial design
    * Finish Issue 5: Create unit tests for DBDestTable class
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Start Issue 6: Create field mappings

== 2010-05-13 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Start Working on Issue 4: Create unit tests for DBSourceTable class
  * Done:
   * Continue working on initial design
    * Finish Issue 4: Create unit tests for DBSourceTable class
    * Began working on Issue 5: Create unit tests for DBDestTable class
     * Finish unit test for class DBParamPopulator
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 5: Create unit tests for DBDestTable class

== 2010-05-04 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class
  * Done:
   * Continue working on initial design
    * Finish Issue 3: Create DBDestTable class
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Start Working on Issue 4: Create unit tests for DBSourceTable class

== 2010-05-03 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class
  * Done:
   * Continue working on initial design
    * Work on Issue 3: Create DBDestTable class
     * Extend class CommonSQLStatementBuilder
     * Update test cases for CommonSQLStatementBuilder
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class

== 2010-04-27 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class
  * Done:
   * Continue working on initial design
    * Work on Issue 3: Create DBDestTable class
     * Finish update table class (with test cases)
     * Finish update insert class and (start creating test cases)
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class

== 2010-04-23 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class
  * Done:
   * Continue working on initial design
    * Work on Issue 3: Create DBDestTable class
     * Create Update db table class and start writing test cases and i plan to continue on update db and his test cases
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class

== 2010-03-21 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class
  * Done:
   * Continue working on initial design
    * Work on Issue 3: Create DBDestTable class
     * Create common sql statement builder class which builds parametric insert and update  statements
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class

== 2010-03-19 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 2: Create DBSourceTable class
     * Continue with unit tests for ResultSetDBSourceTable and builder
  * Done:
   * Continue working on initial design
    * Coded - Issue 2: Create DBSourceTable class
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 3: Create DBDestTable class

== 2010-03-17 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Issue 2: Create DBSourceTable class
  * Done:
   * Continue working on initial design
    * Issue 2: Create DBSourceTable class
     * Finish implementation of ResultSetDBSourceTable and builder
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 2: Create DBSourceTable class
     * Continue with unit tests for ResultSetDBSourceTable and builder

== 2010-03-11 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with src/dst tables
  * Done:
   * Issue 1: Create unit test for DBConnectionBuilder class
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Issue 2: Create DBSourceTable class

== 2010-03-10 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with field maps or src/dst tables
  * Done:
   * src/dst tables (first i need to build way to get a db connection because the target of the first version is to have working application which imports data from db tables, the target of the v2 is to have working with any kind of tables)
    * Added classes DBConnectionBuilder and DriverShim and extends package utils
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Continue with src/dst tables

== 2010-03-09 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with field maps or src/dst tables
  * Done:
   * Cosmetic changes into RowImporter class
   * Create unit test for RowImporter logic, add in memory source and destination tables
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Continue with src/dst tables

== 2010-03-05 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with field maps or src/dst tables
  * Done:
   * Added RowImporter with abstract implementation
   * Update IDestTable interface
  * Obstacles:
   * No
  * Plan:
   * Continue working on initial design
    * Continue with field maps or src/dst tables

== 2010-02-25 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with field maps or src/dst tables
  * Done:
   * Continue with research about how dynamically can load database connector without adding it into classpath and found a solution
  * Obstacles:
   * Research too long
  * Plan:
   * Continue working on initial design
    * Continue with field maps or src/dst tables

== 2010-02-23 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue with field maps or src/dst tables
  * Done:
   * Make a research about how dynamically can load database connector without adding it into classpath
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design
    * Continue with field maps or src/dst tables

== 2010-02-18 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Continue working on refacturing on RowData class
  * Done:
   * Finish the refacturing of RowData class
   * Update the unit tests
   * Change some class names
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design
    * Continue with field maps or src/dst tables

== 2010-02-11 ==
 * djemriza
  * Prev:
   * Continue working on initial design
    * Create a design of source table and destination table
  * Done:
   * Little refacturing on RowData class (will continue with refacturing)
    * Add new class ObjectWithProperties
    * Add new class NameValueMap
   * Added interfaces without any declarations for IDestTable and ISourceTable
   * Implement first field map mapping (FieldToFieldMap)
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design
    * Continue working on refacturing on RowData class

== 2010-02-09 ==
 * djemriza
  * Prev:
   * Continue working on initial design
  * Done:
   * Initial design
    * Restructure the sources
    * Create a interface for a field mapping
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design
    * Create a design of source table and destination table

== 2010-02-04 ==
 * djemriza
  * Prev:
   * Continue working on initial design
  * Done:
   * Initial design
    * Implement class RowData which holds information about what should be posted into destination row
    * Write unit test for RowData class
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design

== 2010-02-02 ==
 * djemriza
  * Prev:
   * Start working on initial design
  * Done:
   * Working on initial design
   * Post simple change in SVN
  * Obstacles:
   * no
  * Plan:
   * Continue working on initial design

== 2010-01-28 ==
 * djemriza
  * Prev:
   * Nothing
  * Done:
   * Create basic project in NetBeans IDE
   * Create projects SVN and Wiki on [code.google.com Google Code]
  * Obstacles:
   * no
  * Plan:
   * Start working on initial design